// Code generated by protoc-gen-go. DO NOT EDIT.
// source: account.proto

package pro

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetAccountReq struct {
	Header               *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Sid                  string         `protobuf:"bytes,2,opt,name=sid,proto3" json:"sid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetAccountReq) Reset()         { *m = GetAccountReq{} }
func (m *GetAccountReq) String() string { return proto.CompactTextString(m) }
func (*GetAccountReq) ProtoMessage()    {}
func (*GetAccountReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_93d09258497f2cea, []int{0}
}
func (m *GetAccountReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountReq.Unmarshal(m, b)
}
func (m *GetAccountReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountReq.Marshal(b, m, deterministic)
}
func (dst *GetAccountReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountReq.Merge(dst, src)
}
func (m *GetAccountReq) XXX_Size() int {
	return xxx_messageInfo_GetAccountReq.Size(m)
}
func (m *GetAccountReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountReq proto.InternalMessageInfo

func (m *GetAccountReq) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetAccountReq) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

type GetAccountRes struct {
	Header               *ResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Balance              int64           `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetAccountRes) Reset()         { *m = GetAccountRes{} }
func (m *GetAccountRes) String() string { return proto.CompactTextString(m) }
func (*GetAccountRes) ProtoMessage()    {}
func (*GetAccountRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_93d09258497f2cea, []int{1}
}
func (m *GetAccountRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountRes.Unmarshal(m, b)
}
func (m *GetAccountRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountRes.Marshal(b, m, deterministic)
}
func (dst *GetAccountRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountRes.Merge(dst, src)
}
func (m *GetAccountRes) XXX_Size() int {
	return xxx_messageInfo_GetAccountRes.Size(m)
}
func (m *GetAccountRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountRes proto.InternalMessageInfo

func (m *GetAccountRes) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetAccountRes) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func init() {
	proto.RegisterType((*GetAccountReq)(nil), "pro.GetAccountReq")
	proto.RegisterType((*GetAccountRes)(nil), "pro.GetAccountRes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccountClient is the client API for Account service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountClient interface {
	GetAccount(ctx context.Context, in *GetAccountReq, opts ...grpc.CallOption) (*GetAccountRes, error)
}

type accountClient struct {
	cc *grpc.ClientConn
}

func NewAccountClient(cc *grpc.ClientConn) AccountClient {
	return &accountClient{cc}
}

func (c *accountClient) GetAccount(ctx context.Context, in *GetAccountReq, opts ...grpc.CallOption) (*GetAccountRes, error) {
	out := new(GetAccountRes)
	err := c.cc.Invoke(ctx, "/pro.Account/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountServer is the server API for Account service.
type AccountServer interface {
	GetAccount(context.Context, *GetAccountReq) (*GetAccountRes, error)
}

func RegisterAccountServer(s *grpc.Server, srv AccountServer) {
	s.RegisterService(&_Account_serviceDesc, srv)
}

func _Account_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro.Account/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).GetAccount(ctx, req.(*GetAccountReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Account_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pro.Account",
	HandlerType: (*AccountServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccount",
			Handler:    _Account_GetAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "account.proto",
}

func init() { proto.RegisterFile("account.proto", fileDescriptor_account_93d09258497f2cea) }

var fileDescriptor_account_93d09258497f2cea = []byte{
	// 180 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x4c, 0x4e, 0xce,
	0x2f, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x28, 0xca, 0x97, 0xe2,
	0x4a, 0xce, 0xcf, 0xcd, 0x85, 0x08, 0x28, 0xf9, 0x72, 0xf1, 0xba, 0xa7, 0x96, 0x38, 0x42, 0x14,
	0x05, 0xa5, 0x16, 0x0a, 0x69, 0x71, 0xb1, 0x65, 0xa4, 0x26, 0xa6, 0xa4, 0x16, 0x49, 0x30, 0x2a,
	0x30, 0x6a, 0x70, 0x1b, 0x09, 0x81, 0x14, 0xea, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x78,
	0x80, 0x65, 0x82, 0xa0, 0x2a, 0x84, 0x04, 0xb8, 0x98, 0x8b, 0x33, 0x53, 0x24, 0x98, 0x14, 0x18,
	0x35, 0x38, 0x83, 0x40, 0x4c, 0xa5, 0x30, 0x54, 0xe3, 0x8a, 0x85, 0xb4, 0xd1, 0x8c, 0x13, 0x86,
	0x1a, 0x57, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x8a, 0x66, 0x9e, 0x04, 0x17, 0x7b, 0x52, 0x62, 0x4e,
	0x62, 0x5e, 0x72, 0x2a, 0xd8, 0x4c, 0xe6, 0x20, 0x18, 0xd7, 0xc8, 0x91, 0x8b, 0x1d, 0x6a, 0xa8,
	0x90, 0x19, 0x17, 0x17, 0xc2, 0x0a, 0x21, 0x88, 0xf3, 0x50, 0xbc, 0x20, 0x85, 0x29, 0x56, 0xac,
	0xc4, 0x90, 0xc4, 0x06, 0xf6, 0xb0, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x94, 0x7d, 0x44,
	0x12, 0x01, 0x00, 0x00,
}
