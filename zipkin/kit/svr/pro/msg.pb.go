// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UnReadReq struct {
	Userid               string   `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnReadReq) Reset()         { *m = UnReadReq{} }
func (m *UnReadReq) String() string { return proto.CompactTextString(m) }
func (*UnReadReq) ProtoMessage()    {}
func (*UnReadReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_msg_fbb6efc438a1d34f, []int{0}
}
func (m *UnReadReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnReadReq.Unmarshal(m, b)
}
func (m *UnReadReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnReadReq.Marshal(b, m, deterministic)
}
func (dst *UnReadReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnReadReq.Merge(dst, src)
}
func (m *UnReadReq) XXX_Size() int {
	return xxx_messageInfo_UnReadReq.Size(m)
}
func (m *UnReadReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UnReadReq.DiscardUnknown(m)
}

var xxx_messageInfo_UnReadReq proto.InternalMessageInfo

func (m *UnReadReq) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

type UnReadResBody struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnReadResBody) Reset()         { *m = UnReadResBody{} }
func (m *UnReadResBody) String() string { return proto.CompactTextString(m) }
func (*UnReadResBody) ProtoMessage()    {}
func (*UnReadResBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_msg_fbb6efc438a1d34f, []int{1}
}
func (m *UnReadResBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnReadResBody.Unmarshal(m, b)
}
func (m *UnReadResBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnReadResBody.Marshal(b, m, deterministic)
}
func (dst *UnReadResBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnReadResBody.Merge(dst, src)
}
func (m *UnReadResBody) XXX_Size() int {
	return xxx_messageInfo_UnReadResBody.Size(m)
}
func (m *UnReadResBody) XXX_DiscardUnknown() {
	xxx_messageInfo_UnReadResBody.DiscardUnknown(m)
}

var xxx_messageInfo_UnReadResBody proto.InternalMessageInfo

func (m *UnReadResBody) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type UnReadRes struct {
	Code                 int64          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Body                 *UnReadResBody `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UnReadRes) Reset()         { *m = UnReadRes{} }
func (m *UnReadRes) String() string { return proto.CompactTextString(m) }
func (*UnReadRes) ProtoMessage()    {}
func (*UnReadRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_msg_fbb6efc438a1d34f, []int{2}
}
func (m *UnReadRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnReadRes.Unmarshal(m, b)
}
func (m *UnReadRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnReadRes.Marshal(b, m, deterministic)
}
func (dst *UnReadRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnReadRes.Merge(dst, src)
}
func (m *UnReadRes) XXX_Size() int {
	return xxx_messageInfo_UnReadRes.Size(m)
}
func (m *UnReadRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UnReadRes.DiscardUnknown(m)
}

var xxx_messageInfo_UnReadRes proto.InternalMessageInfo

func (m *UnReadRes) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UnReadRes) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *UnReadRes) GetBody() *UnReadResBody {
	if m != nil {
		return m.Body
	}
	return nil
}

func init() {
	proto.RegisterType((*UnReadReq)(nil), "pb.UnReadReq")
	proto.RegisterType((*UnReadResBody)(nil), "pb.UnReadResBody")
	proto.RegisterType((*UnReadRes)(nil), "pb.UnReadRes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	GetUnRead(ctx context.Context, in *UnReadReq, opts ...grpc.CallOption) (*UnReadRes, error)
}

type msgClient struct {
	cc *grpc.ClientConn
}

func NewMsgClient(cc *grpc.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) GetUnRead(ctx context.Context, in *UnReadReq, opts ...grpc.CallOption) (*UnReadRes, error) {
	out := new(UnReadRes)
	err := c.cc.Invoke(ctx, "/pb.Msg/GetUnRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	GetUnRead(context.Context, *UnReadReq) (*UnReadRes, error)
}

func RegisterMsgServer(s *grpc.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_GetUnRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnReadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GetUnRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Msg/GetUnRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GetUnRead(ctx, req.(*UnReadReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUnRead",
			Handler:    _Msg_GetUnRead_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "msg.proto",
}

func init() { proto.RegisterFile("msg.proto", fileDescriptor_msg_fbb6efc438a1d34f) }

var fileDescriptor_msg_fbb6efc438a1d34f = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcc, 0x2d, 0x4e, 0xd7,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x52, 0xe6, 0xe2, 0x0c, 0xcd, 0x0b,
	0x4a, 0x4d, 0x4c, 0x09, 0x4a, 0x2d, 0x14, 0x12, 0xe3, 0x62, 0x2b, 0x2d, 0x4e, 0x2d, 0xca, 0x4c,
	0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf2, 0x94, 0x54, 0xb9, 0x78, 0x61, 0x8a, 0x8a,
	0x9d, 0xf2, 0x53, 0x2a, 0x85, 0x44, 0xb8, 0x58, 0x93, 0xf3, 0x4b, 0xf3, 0x4a, 0xc0, 0xea, 0x98,
	0x83, 0x20, 0x1c, 0xa5, 0x08, 0x84, 0x59, 0xc5, 0x42, 0x42, 0x5c, 0x2c, 0xc9, 0xf9, 0x29, 0xa9,
	0x50, 0x15, 0x60, 0xb6, 0x90, 0x00, 0x17, 0x73, 0x6e, 0x71, 0xba, 0x04, 0x13, 0xd8, 0x70, 0x10,
	0x53, 0x48, 0x95, 0x8b, 0x25, 0x29, 0x3f, 0xa5, 0x52, 0x82, 0x59, 0x81, 0x51, 0x83, 0xdb, 0x48,
	0x50, 0xaf, 0x20, 0x49, 0x0f, 0xc5, 0xa6, 0x20, 0xb0, 0xb4, 0x91, 0x11, 0x17, 0xb3, 0x6f, 0x71,
	0xba, 0x90, 0x36, 0x17, 0xa7, 0x7b, 0x6a, 0x09, 0x44, 0x81, 0x10, 0x2f, 0xb2, 0xe2, 0x42, 0x29,
	0x14, 0x6e, 0xb1, 0x12, 0x43, 0x12, 0x1b, 0xd8, 0x93, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x67, 0x8d, 0xaa, 0x05, 0xf1, 0x00, 0x00, 0x00,
}
